= f.fields_for :user do |user_form|
  #left_pane_detail
    .field
      = user_form.label :username
      br
      = profile.user.username
    .field
      = user_form.label :email
      br
      = user_form.text_field :email
    .field
      = user_form.label :auto_generated_password
      = user_form.check_box :auto_generated_password
    .field
      = f.label :expired_at
      br
      - if current_user.has_role?('Librarian')
        = f.text_field :expired_at, value: profile.expired_at.try(:strftime, "%Y-%m-%d"), class: 'date_text_field', placeholder: "#{t('page.example')}: 2011-04-12"
      - else
        = l(profile.expired_at) if profile.expired_at
        - - end
    .field
      = user_form.label :locked
      = user_form.check_box :locked
    .field
      = user_form.label t('activerecord.models.role')
      br
      = user_form.fields_for :user_has_role do |u|
        - if current_user.has_role?('Administrator') and current_user != profile.user
          = u.select :role_id, @roles.collect{|r| [r.display_name.localize, r.id]}
        - else
          = u.select(:role_id, @roles.collect{|r| [r.display_name.localize, r.id]}, {}, {disabled: 'disabled'})
  #right_pane_detail
    .field
      = f.label :full_name
      br
      = f.text_field :full_name
    .field
      = f.label :full_name_transcription
      br
      = f.text_field :full_name_transcription
    - if current_user.has_role?('Librarian')
      .field
        = f.label t('activerecord.models.user_group')
        br
        = f.select(:user_group_id, @user_groups.collect{|u| [u.display_name.localize, u.id]})
      - - end
      .field
        = f.label :user_number
        br
        - if current_user.has_role?('Librarian')
          = f.text_field :user_number, class: 'resource_user_number'
        - else
          = profile.user_number
          - - end
      - if current_user.has_role?('Librarian')
        .field
          = f.label t('activerecord.models.library')
          br
          = f.select(:library_id, @libraries.collect{|l| [l.display_name.localize, l.id]})
        .field
          = f.label t('role.required_role')
          br
          = f.select(:required_role_id, @roles.collect{|r| [r.display_name.localize, r.id]})
        - - end
        .field
          = f.label :locale
          br
          = f.select(:locale, @available_languages.collect{|language| [language.display_name.localize, language.iso_639_1]})
